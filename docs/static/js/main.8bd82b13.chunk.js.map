{"version":3,"sources":["helpers/getGifs.js","components/GifCard.js","components/GifGrid.js","hooks/useFetchGifs.js","components/SearchBar.js","GifFinder.js","index.js"],"names":["getGifs","word","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","user","display_name","avatar","avatar_url","GifCard","gif","className","style","width","src","alt","maxHeight","href","target","rel","GifGrid","useState","loading","state","setstate","useEffect","then","useFetchGifs","length","SearchBar","setWord","value","setValue","onSubmit","e","preventDefault","trim","type","onChange","GifFinder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bd82b13.chunk.js","sourcesContent":["export const getGifs = async (word) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tword\n\t)}&limit=10&api_key=40NwHbLFGBBwnEsdxbDw5ZEvkqJoPlNl`;\n\tconst resp = await fetch(url);\n\tconst { data } = await resp.json(resp);\n\n\tconst gifs = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url,\n\t\t\tuser: img.user?.display_name,\n\t\t\tavatar: img.user?.avatar_url\n\t\t};\n\t});\n\n\treturn gifs;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GifCard = ({ gif }) => {\n\tconst { url, title, user, avatar } = gif;\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"card animate__animated animate__fadeInUp animate__slow\"\n\t\t\tstyle={{ width: \"18rem\" }}\n\t\t>\n\t\t\t<img src={url} className=\"card-img-top\" alt={title} />\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h5 className=\"card-title\">{title}</h5>\n\n\t\t\t\t{user && (\n\t\t\t\t\t<div className=\"d-flex mt-3\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"border border-3 rounded-circle\"\n\t\t\t\t\t\t\tsrc={avatar}\n\t\t\t\t\t\t\talt={user}\n\t\t\t\t\t\t\tstyle={{ maxHeight: 30 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"card-text align-self-center ms-2\">{user} </span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<a className=\"btn btn-outline-primary mt-4\" href={url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\tGo to resource\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nGifCard.propTypes = {\n\tgif: PropTypes.object.isRequired\n};\n\nexport default GifCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifCard from \"./GifCard\";\n\nconst GifGrid = ({ word }) => {\n\tconst { loading, gifs } = useFetchGifs(word);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"d-flex justify-content-center mt-5\">\n\t\t\t\t{word.length > 0 && <h3 className=\"\">Gifs for \"{word}\"</h3>}\n\t\t\t</div>\n\n\t\t\t<div className=\"d-flex justify-content-center mt-2\">{loading && <h5>Loading ...</h5>}</div>\n\n\t\t\t<div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-3 mt-5\">\n\t\t\t\t{gifs.map((gif) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center col\" key={gif.id}>\n\t\t\t\t\t\t\t<GifCard gif={gif} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nGifGrid.propTypes = {\n\tword: PropTypes.string.isRequired\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (word) => {\n\tconst [state, setstate] = useState({ loading: true, gifs: [] });\n\n\tuseEffect(() => {\n\t\tsetstate((state) => ({ ...state, loading: true }));\n\t\tgetGifs(word).then((gifs) => {\n\t\t\tsetstate({ loading: false, gifs });\n\t\t});\n\t}, [word]);\n\n\treturn state;\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchBar = ({ setWord }) => {\n\tconst [value, setValue] = useState(\"\");\n\n\tconst handleInputChange = (e) => {\n\t\tsetValue(e.target.value);\n\t};\n\n\tconst handleSetWord = (e) => {\n\t\te.preventDefault();\n\t\tif (value.trim().length > 2) {\n\t\t\tsetWord(value);\n\t\t\tsetValue(\"\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<form className=\"d-flex\" onSubmit={handleSetWord}>\n\t\t\t<input\n\t\t\t\tid=\"searchInput\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t\tclassName=\"form-control\"\n\t\t\t/>\n\n\t\t\t<button className=\"btn btn-primary ms-2\">Search</button>\n\t\t</form>\n\t);\n};\n\nSearchBar.propTypes = {\n\tsetWord: PropTypes.func.isRequired\n};\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport GifGrid from \"./components/GifGrid\";\nimport SearchBar from \"./components/SearchBar\";\n\nexport const GifFinder = () => {\n\tconst [word, setWord] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"container text-secondary\">\n\t\t\t<div className=\"d-flex justify-content-center mt-5\">\n\t\t\t\t<h1>Gif Finder</h1>\n\t\t\t</div>\n\n\t\t\t<div className=\"row d-flex justify-content-center mt-4\">\n\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t<SearchBar setWord={setWord} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"mt-4 animate__animated animate__fadeIn\">\n\t\t\t\t<GifGrid word={word} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifFinder } from \"./GifFinder\";\n\nReactDOM.render(<GifFinder />, document.getElementById(\"root\"));\n"],"sourceRoot":""}